# This workflow integrates a collection of open source static analysis tools
# with GitHub code scanning. For documentation, or to provide feedback, visit
# https://github.com/github/ossar-action
name: OSSAR

# This section configures the trigger for the workflow. Feel free to customize depending on your convention
on:
  push:
    branches: [monorepo]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [monorepo]

jobs:
  OSSAR-Scan:
    # OSSAR runs on windows-latest.
    # ubuntu-latest and macos-latest support coming soon
    runs-on: windows-latest

    steps:
      - name: Checkout üì•
        uses: actions/checkout@v2.3.4
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2

      # If this run was triggered by a pull request event, then checkout
      # the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Setup Node üíø
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Restore npm cache ‚ôªÔ∏è
        uses: actions/cache@v2.1.3
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install development dependencies üìö
        run: npm ci
      - name: Build all packages üõ†Ô∏è
        run: npm run build:all

      # Ensure a compatible version of dotnet is installed.
      # The [Microsoft Security Code Analysis CLI](https://aka.ms/mscadocs) is built with dotnet v3.1.201.
      # A version greater than or equal to v3.1.201 of dotnet must be installed on the agent in order to run this action.
      # GitHub hosted runners already have a compatible version of dotnet installed and this step may be skipped.
      # For self-hosted runners, ensure dotnet version 3.1.201 or later is installed by including this action:
      # - name: Install .NET
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: '3.1.x'

      # Run open source static analysis tools
      - name: Run OSSAR üëÅÔ∏è
        uses: github/ossar-action@v1
        id: ossar

      # Upload results to the Security tab
      - name: Upload OSSAR results üì§
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.ossar.outputs.sarifFile }}
